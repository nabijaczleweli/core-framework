export default class preloader{static getTimestamp(){const perfnow=window.performance.now || window.performance.webkitNow;return perfnow ? perfnow.call(window.performance) : new Date().getTime();}constructor(onCompl, ...images){this.onComplete=onCompl;this.config={cache: true,parallel: true,};this.time={start: 0,end: 0,};this.total=0;this.images=[];this._queue=[];if(onCompl && images){this.enqueue(...images);this.preload();}}enqueue(...elements){this._queue=this._queue.concat(elements.map(elem=> ((typeof elem==='string') ?{source: elem}: elem)));return this;}_finish(index, image){--this.total;this.images.forEach(img=>{if(img.index==index)img.size={width: image.width,height: image.heigth,};});if(!this.total){this.time.end=new Date().getTime();this.onComplete({time: Math.round(this.time.end-this.time.start),images: this.images});}}preload(cbk){this.onComplete=cbk || this.onComplete;this.time.start=preloader.getTimestamp();this.total=this._queue.length;for(let index=this.total;--index;){let image=new Image();this.images.push({index,image,size:{width: 0,height: 0}});image.onload=image.onerror=image.onabort=(()=> this._finish(index, image));image.src=this._queue[index].source+(this.config.cache ? '' : ('?__preloader_cache_invalidator='+preloader.getTimestamp()));}}}
