export default class preloader{static getTimestamp(){const perfnow=window.performance.now || window.performance.webkitNow;return perfnow ? perfnow.call(window.performance) : new Date().getTime();}constructor(onCompl, ...images){this.onComplete=onCompl;this.config={cache: true, parallel: true,};this.time={start: 0, end: 0,};this.total=0;this._queue=[];this._images=[];this.enqueue(...images);}enqueue(...elements){this._queue=this._queue.concat(elements.map(elem=>{(typeof elem==='string') ?{source: elem}: elem}));return this;}finish(index, image){--this.total;this._images.forEach(img=>{if(img.index==index) img.size={width: image.width, height: image.heigth,}});if(!total){ time.end=new Date().getTime();this.onComplete({time: ((time.end-time.start) / 1e3).toPrecision(2), images: images});}}preload(cbk){this.onComplete=cbk || this.onComplete;this.time.start=getTimestamp();this.total=queue.length;for(let index=this.total;--i;){let image=new Image();this.images.push({index, image, size:{width: 0, height: 0}});image.onload=image.onerror=image.onabort=(()=> finish(index, image));image.src=queue[index].source+(config.cache ? ('?__preloader_cache_invalidator='+getTimestamp()) : '');}}}